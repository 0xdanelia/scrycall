import sys

# print useful info about this program for the user
def printhelp():
	#####('--------------------------------------------------------------------------------') 80
	print('')
	print('Special options begin with "--" and can appear anywhere in the input.')
	print('Everything else will be treated as part of the query string.')
	print('Query syntax reference: https://scryfall.com/docs/syntax')
	print('')
	print('--format="CUSTOM OUTPUT TEXT" , --f="CUSTOM OUTPUT TEXT"')
	print('    Set the format of the output. Use %X to print certain card properties.')
	print('    Default is "%name". Use --help-format for more information.')
	print('')
	print('--null="CUSTOM OUTPUT TEXT" , --n="CUSTOM OUTPUT TEXT"')
	print('    When a card property in --format is null or empty, print this custom')
	print('    output in its place. If this text contains any null or empty properties,')
	print('    print "" in its place. Use --help-format for more information.')
	print('')
	print('--cache-only , --c')
	print('    Query your local cache only. Do not query the api even if cache is stale.')
	print('')
	print('--ignore-cache , --i')
	print('    Query the api only. Do not query cache even if api can not be reached.')
	print('')
	print('--do-not-cache , --d')
	print('    Do not write fresh api data to your local cache.')
	print('')
	print('--clean-cache')
	print('    Search the local cache and delete any stale data.')
	print('')
	print('--delete-cache')
	print('    Delete everything from the local cache.')
	print('')
	sys.exit()

def printhelpformat():
	#####('--------------------------------------------------------------------------------') 80
	print('')
	print('The --format string is what this program will print after finishing the query.')
	print('Use %X to print card properties. Everything else will be printed as written.')
	print('These properties come from the json card objects returned by the api.')
	print('The --null string will be printed if a card property is null or empty.')
	print('An empty string "" will be printed if a property in the null string is null.')
	print('')
	print('%n    name')
	print('%m    mana_cost')
	print('%c    cmc  (converted mana cost)')
	print('%y    type_line')
	print('%p    power')
	print('%t    toughness')
	print('%l    loyalty')
	print('%o    oracle_text')
	print('%f    flavor_text')
	print('%%    this will print a literal % instead of interpreting a special character')
	print('%|    this will separate output into nicely spaced columns')
	print('')
	print('To reference a property of the json card object that is not listed above,')
	print('put the name of that propery inside "%[]". To traverse multiple objects,')
	print('separate their names with ";" within the brackets. For example:')
	print('> scry "lightning bolt" --format="%[legalities;modern]"')
	print('')
	print('To print all available property names, use "?" in the brackets. For example:')
	print('> scry "black lotus" --format="%[?]"')
	print('')
	print('To iterate every property of a json object, use "*" in the brackets.')
	print('This may print multiple lines for each card returned by the query. For example:')
	print('> scry "serra angel" --format="%[keywords;*]"')
	print('')
	print('You can print the name of the previous property using "^" within the brackets.')
	print('This can be useful when combined with iterating. For example:')
	print('> scry "scalding tarn" --format="%[prices;*;^] %| $%[prices;*]"')
	print('')
	print('Some properties are web addresses for an api call to another object. The api')
	print('will automatically be called (and cached) and you can traverse the retrieved')
	print('object as normal. For example:')
	print('> scry "mox lotus" --f="%[set_uri;name] was released %[set_uri;released_at]"')
	print('')
	sys.exit()

